from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from fastapi.openapi.utils import get_openapi
from src.routes.api import router

# Definindo os metadados das tags para o Swagger
tags_metadata = [
    {
        "name": "Planos",
        "description": "Gerenciamento de planos da academia",
    },
    {
        "name": "Alunos",
        "description": "Opera√ß√µes relacionadas aos alunos",
    },
    {
        "name": "Bioimped√¢ncia",
        "description": "Medi√ß√µes e acompanhamento f√≠sico",
    },
    {
        "name": "Instrutores",
        "description": "Gerenciamento de instrutores",
    },
    {
        "name": "Turmas",
        "description": "Controle de turmas e atividades",
    },
    {
        "name": "Relat√≥rios",
        "description": "Relat√≥rios e an√°lises do sistema",
    }
]

description = """
# GIM - Sistema de Gerenciamento de Academia

## Funcionalidades

### üèãÔ∏è Planos
* Cadastro e gerenciamento de planos
* Defini√ß√£o de valores e benef√≠cios
* Controle de matr√≠culas

### üë• Alunos
* Cadastro completo de alunos
* Gest√£o de matr√≠culas
* Hist√≥rico de pagamentos
* Acompanhamento de frequ√™ncia

### üìä Bioimped√¢ncia
* Registro de medi√ß√µes
* Acompanhamento de evolu√ß√£o
* Relat√≥rios detalhados
* Hist√≥rico completo

### üë®‚Äçüè´ Instrutores
* Cadastro de profissionais
* Controle de hor√°rios
* Gest√£o de turmas
* Avalia√ß√µes

### üìÖ Turmas
* Cria√ß√£o e gest√£o de turmas
* Controle de vagas
* Agendamentos
* Frequ√™ncia

## Notas
* Autentica√ß√£o necess√°ria para todas as rotas (exceto documenta√ß√£o)
* Dados sens√≠veis s√£o protegidos
* Suporte a m√∫ltiplos formatos de resposta
"""

app = FastAPI(
    title="GIM - Sistema de Academia",
    description=description,
    version="1.0.0",
    openapi_tags=tags_metadata,  # Adicionando as tags ao FastAPI
    terms_of_service="http://gim.com.br/terms/",
    contact={
        "name": "Suporte GIM",
        "url": "http://gim.com.br/support",
        "email": "suporte@gim.com.br",
    },
    license_info={
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT",
    }
)

# Configura√ß√£o CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

app.include_router(router, prefix="/api/v1")

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)